Remote-Phar
===========

Author: Krzysztof Kotowicz <kkotowicz at gmail dot com>
License: MIT

Remote-Phar library facilitates secure distribution of Phar archives to remote locations.

Introduction
------------
Phar archives, though they have many superb features for a PHP developer, have a certain limitation when it comes to their security - although standard Phar file can be signed, the key used to verify the signature is stored alongside the archive. Moreover, the signature verification process is hardcoded and does not allow you to supply the key by yourself.

These problems make it difficult to use Phar archives to distribute a trusted code to 
clients, because both the key and code are stored on the server - attacker could use e.g.
DNS spoofing to emulate the server and supply the code without any signature or using his own
pair of keys. Because of that, Standard Phar extension does not allow including remote (e.g. HTTP://) Phar archives to avoid the old security vulnerability of remote code execution (see e.g. allow_url_fopen and allow_url_include discussion). 

To mitigate this, the remote-phar library uses a different method:
 - the key used to verify the signature is stored on a client (shared-secret) and is 
   never transferred over-the-wire
 - all code is downloaded to the local client cache and is verifed using the stored code
 - after verification the local cached file could be included and loaded (no allow_url_open 
   restrictions)

Usage scenario
--------------

Usage scenario is as follows:

On server (publisher):

1. Create public / private keys with Open SSL
2. On a server build a code (see build.php) and sign it using your private key
   You may use the code on a server like any other phar archive (see local.php)

On client (consumer):

3. Get a copy of public key for signature verification (may be stored locally)
4. Download a code (Phar archive) from the server
5. Verify Phar signature using your copy of public key (to be sure that the code has 
   been generated by trusted entity)
6. Include and run the Phar archive in your application

4,5,6 - see remote.php.

Disclaimer: For the security of given method, it is critical to never disclose the private key!
This method also doesn't protect anyone from looking AT the code - the code is not encrypted,
it is only signed so it cannot be changed by third party.

Installing
----------

To be able to use the project, you must build the Phar 2.0.0 PHP extension from 
http://PECL.php.net and have a working OpenSSL in PHP.

E.g. under Ubuntu, these steps are required to build and configure the extension:

$ sudo apt-get install php5-dev
$ sudo pecl install pecl/phar
$ echo "extension=phar.so" | sudo tee /etc/php5/conf.d/phar.ini
$ echo "phar.readonly=0" | sudo tee -a /etc/php5/conf.d/phar.ini

(the last line is needed on the server only and for security reasons should NOT be executed on client)

After preparing th PHP engine, refer to cert/README to generate certificates


Usage
-----
1. Place your files in src/ directory
2. Use
   $ php build.php 
   to build a signed phar archive
3. Copy public key to a client
4. See code in remote.php to learn how to verify and include the phar archive in your application.


Contact
-------
Krzysztof Kotowicz <kkotowicz at gmail dot com>


